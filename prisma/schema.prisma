// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  password String

  name       String   @unique
  avatarPath String   @default("https://png.pngtree.com/png-vector/20220608/ourmid/pngtree-unidentified-user-illustration-mysterious-social-png-image_4816405.png") @map("avatar_path")
  phone      String   @unique @default("")
  orders     Order[]
  rewiews    Review[]
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @map("updated_at")

  name        String      @unique
  slug        String      @unique
  price       Int
  description String
  images      String[]
  orderItems  OrderItem[]
  rewiews     Review[]
  category    Category?   @relation(fields: [categoryId], references: [id])
  categoryId  Int? @map("category_id")
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @map("updated_at")

  name     String    @unique
  products Product[]
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @map("updated_at")

  rating Int
  text   String

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @map("user_id")

  product   Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @map("updated_at")

  status EnumOrderStatus @default(PENDING)
  items  OrderItem[]

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @map("user_id")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @map("updated_at")

  quantity Int
  price    Int
  order    Order? @relation(fields: [orderId], references: [id])
  orderId  Int?   @map("order_id")

  product   Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")
}

enum EnumOrderStatus {
  PENDING
  PAYED
  SHIPPED
  DELIVERED
}
